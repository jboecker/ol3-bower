{
  "symbols": [
    {
      "name": "ol.Attribution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/attribution.js",
      "provides": [
        "ol.Attribution"
      ]
    },
    {
      "name": "ol.BrowserFeature.DEVICE_PIXEL_RATIO",
      "description": "The ratio between physical pixels and device-independent pixels\n(dips) on the device (`window.devicePixelRatio`).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.BrowserFeature.HAS_CANVAS",
      "description": "True if browser supports Canvas.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.BrowserFeature.HAS_DEVICE_ORIENTATION",
      "description": "Indicates if DeviceOrientation is supported in the user's browser.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.BrowserFeature.HAS_GEOLOCATION",
      "description": "Is HTML5 geolocation supported in the current browser?",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.BrowserFeature.HAS_TOUCH",
      "description": "True if browser supports touch events.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.BrowserFeature.HAS_WEBGL",
      "description": "True if browser supports WebGL.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.Collection",
      "extends": [
        "ol.Object"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#clear",
      "description": "Remove all elements from the collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#extend",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#forEach",
      "description": "Iterate over each element, calling the provided callback.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#getArray",
      "description": "Get a reference to the underlying Array object. Warning: if the array\nis mutated, no events will be dispatched by the collection, and the\ncollection's \"length\" property won't be in sync with the actual length\nof the array.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#getLength",
      "description": "Get the length of this collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#insertAt",
      "description": "Insert an element at the provided index.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#item",
      "description": "Get the element at the provided index.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#pop",
      "description": "Remove the last element of the collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#push",
      "description": "Insert the provided element at the end of the collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#remove",
      "description": "Removes the first occurence of elem from the collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#removeAt",
      "description": "Remove the element at the provided index.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#setAt",
      "description": "Set the element at the provided index.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.CollectionEvent#element",
      "description": "The element that is added to or removed from the collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation",
      "extends": [
        "ol.Object"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getAlpha",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getBeta",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getGamma",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getHeading",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getTracking",
      "description": "Are we tracking the device's orientation?",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#setTracking",
      "description": "Enable or disable tracking of DeviceOrientation events.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DragBoxEvent#coordinate",
      "description": "The coordinate of the drag event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragboxinteraction.js",
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.DrawEvent#feature",
      "description": "The feature being drawn.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/drawinteraction.js",
      "provides": [
        "ol.DrawEvent",
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.Feature",
      "extends": [
        "ol.Object"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#clone",
      "description": "Clone this feature. If the original feature has a geometry it\nis also cloned. The feature id is not set in the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#getGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getGeometryName",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getId",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#getStyle",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getStyleFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#setGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setGeometryName",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setId",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setStyle",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.FeatureOverlay",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#addFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#getStyle",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#getStyleFunction",
      "description": "Get the style function.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#removeFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#setFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#setMap",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#setStyle",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.Geolocation",
      "extends": [
        "ol.Object"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#getAccuracy",
      "description": "Get the accuracy of the position in meters.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getAccuracyGeometry",
      "description": "Get a geometry of the position accuracy.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getAltitude",
      "description": "Get the altitude associated with the position.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getAltitudeAccuracy",
      "description": "Get the altitude accuracy of the position.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getHeading",
      "description": "Get the heading as radians clockwise from North.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#getPosition",
      "description": "Get the position of the device.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getProjection",
      "description": "Get the projection associated with the position.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#getSpeed",
      "description": "Get the speed in meters per second.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getTracking",
      "description": "Are we tracking the user's position?",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getTrackingOptions",
      "description": "Get the tracking options.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#setProjection",
      "description": "Set the projection to use for transforming the coordinates.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#setTracking",
      "description": "Enable/disable tracking.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#setTrackingOptions",
      "description": "Set the tracking options.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.ImageTile#getImage",
      "path": "/home/nd0ut/workspace/ol3/src/ol/imagetile.js",
      "provides": [
        "ol.ImageTile"
      ]
    },
    {
      "name": "ol.ImageTile#getTileCoord",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tile.js",
      "provides": [
        "ol.Tile",
        "ol.TileState"
      ]
    },
    {
      "name": "ol.Kinetic",
      "path": "/home/nd0ut/workspace/ol3/src/ol/kinetic.js",
      "provides": [
        "ol.Kinetic"
      ]
    },
    {
      "name": "ol.Map",
      "extends": [
        "ol.Object"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addControl",
      "description": "Add the given control to the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addInteraction",
      "description": "Add the given interaction to the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addLayer",
      "description": "Adds the given layer to the top of this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addOverlay",
      "description": "Add the given overlay to the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#beforeRender",
      "description": "Add functions to be called before rendering. This can be used for attaching\nanimations before updating the map's view.  The {@link ol.animation}\nnamespace provides several static methods for creating prerender functions.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#forEachFeatureAtPixel",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#getControls",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getCoordinateFromPixel",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getEventCoordinate",
      "description": "Returns the geographical coordinate for a browser event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getEventPixel",
      "description": "Returns the map pixel position for a browser event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getInteractions",
      "description": "Gets the collection of {@link ol.interaction.Interaction} instances\nassociated with this map. Modifying this collection changes the interactions\nassociated with the map.\n\nInteractions are used for e.g. pan, zoom and rotate.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#getLayerGroup",
      "description": "Get the layergroup associated with this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getLayers",
      "description": "Get the collection of layers associated with this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getOverlays",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getPixelFromCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#getSize",
      "description": "Get the size of this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getTarget",
      "description": "Get the target in which this map is rendered.\nNote that this returns what is entered as an option or in setTarget:\nif that was an element, it returns an element; if a string, it returns that.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getView",
      "description": "Get the view associated with this map. This can be a 2D or 3D view. A 2D\nview manages properties such as center and resolution.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getViewport",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#removeControl",
      "description": "Remove the given control from the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#removeInteraction",
      "description": "Remove the given interaction from the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#removeLayer",
      "description": "Removes the given layer from the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#removeOverlay",
      "description": "Remove the given overlay from the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#render",
      "description": "Requests a render frame; rendering will effectively occur at the next browser\nanimation frame.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#renderSync",
      "description": "Requests an immediate render in a synchronous manner.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#setLayerGroup",
      "description": "Sets the layergroup of this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#setSize",
      "description": "Set the size of this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#setTarget",
      "description": "Set the target element to render this map into.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#setView",
      "description": "Set the view for this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#updateSize",
      "description": "Force a recalculation of the map viewport size.  This should be called when\nthird-party code changes the size of the map viewport.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#coordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#frameState",
      "description": "The frame state at the time of the event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#map",
      "description": "The map where the event occurred.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#originalEvent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#pixel",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#preventDefault",
      "description": "Prevents the default browser action.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#stopPropagation",
      "description": "Prevents further propagation of the current event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#coordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#frameState",
      "description": "The frame state at the time of the event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#map",
      "description": "The map where the event occurred.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#originalEvent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#pixel",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#preventDefault",
      "description": "Prevents the default browser action.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#stopPropagation",
      "description": "Prevents further propagation of the current event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapEvent#frameState",
      "description": "The frame state at the time of the event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapEvent#map",
      "description": "The map where the event occurred.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.Object",
      "extends": [
        "ol.Observable"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.ObjectEvent#key",
      "description": "The name of the property whose value is changing.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Observable",
      "extends": [
        "goog.events.EventTarget"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay",
      "extends": [
        "ol.Object"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#getElement",
      "description": "Get the DOM element of this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#getMap",
      "description": "Get the map associated with this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getOffset",
      "description": "Get the offset of this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getPosition",
      "description": "Get the current position of this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getPositioning",
      "description": "Get the current positioning of this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#setElement",
      "description": "Set the DOM element to be associated with this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setMap",
      "description": "Set the map to be associated with this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setOffset",
      "description": "Set the offset for this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setPosition",
      "description": "Set the position for this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setPositioning",
      "description": "Set the positioning for this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Tile#getTileCoord",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tile.js",
      "provides": [
        "ol.Tile",
        "ol.TileState"
      ]
    },
    {
      "name": "ol.TileCoord#getZXY",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilecoord.js",
      "provides": [
        "ol.TileCoord"
      ]
    },
    {
      "name": "ol.View#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View2D",
      "extends": [
        "ol.View"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View2D#calculateExtent",
      "description": "Calculate the extent for the given size in pixels, based on the current\nresolution and the current center.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#centerOn",
      "description": "Center on coordinate and view position.\nTake care on the map angle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#constrainCenter",
      "description": "Get the constrained center of this view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#constrainResolution",
      "description": "Get the constrained resolution of this view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#constrainRotation",
      "description": "Get the constrained rotation of this view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View2D#fitExtent",
      "description": "Fit the given extent based on the given map size.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#fitGeometry",
      "description": "Fit the given geometry based on the given map size and border.\nTake care on the map angle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View2D#getCenter",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View2D#getProjection",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View2D#getResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#getResolutionForExtent",
      "description": "Get the resolution for a provided extent (in map units) and size (in pixels).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View2D#getRotation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#getView2D",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#getZoom",
      "description": "Get the current zoom level. Return undefined if the current\nresolution is undefined or not a \"constrained resolution\".",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View2D#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View2D#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View2D#rotate",
      "description": "Rotate the view around a given coordinate.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View2D#setCenter",
      "description": "Set the center of the current view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#setProjection",
      "description": "Set the projection of this view.\nWarning! This code is not yet implemented. Function should not be used.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#setResolution",
      "description": "Set the resolution for this view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#setRotation",
      "description": "Set the rotation for this view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View2D#setZoom",
      "description": "Zoom to a specific zoom level.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view2d.js",
      "provides": [
        "ol.View2D",
        "ol.View2DProperty"
      ]
    },
    {
      "name": "ol.View2D#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View2D#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View2D#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View2D#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.animation.bounce",
      "path": "/home/nd0ut/workspace/ol3/src/ol/animation.js",
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.animation.pan",
      "path": "/home/nd0ut/workspace/ol3/src/ol/animation.js",
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.animation.rotate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/animation.js",
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.animation.zoom",
      "path": "/home/nd0ut/workspace/ol3/src/ol/animation.js",
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.color.asArray",
      "path": "/home/nd0ut/workspace/ol3/src/ol/color/color.js",
      "provides": [
        "ol.color"
      ]
    },
    {
      "name": "ol.color.asString",
      "path": "/home/nd0ut/workspace/ol3/src/ol/color/color.js",
      "provides": [
        "ol.color"
      ]
    },
    {
      "name": "ol.control.Attribution",
      "extends": [
        "ol.control.Control"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/attributioncontrol.js",
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#getMap",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Attribution#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#setMap",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Attribution#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control",
      "extends": [
        "ol.Object"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Control#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#getMap",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Control#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#setMap",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Control#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen",
      "extends": [
        "ol.control.Control"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/fullscreencontrol.js",
      "provides": [
        "ol.control.FullScreen"
      ]
    },
    {
      "name": "ol.control.FullScreen#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#getMap",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.FullScreen#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#setMap",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.FullScreen#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Logo",
      "extends": [
        "ol.control.Control"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/logocontrol.js",
      "provides": [
        "ol.control.Logo"
      ]
    },
    {
      "name": "ol.control.Logo#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Logo#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Logo#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Logo#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Logo#getMap",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Logo#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Logo#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Logo#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Logo#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Logo#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Logo#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Logo#setMap",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Logo#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Logo#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Logo#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Logo#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Logo#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition",
      "extends": [
        "ol.control.Control"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#getCoordinateFormat",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#getMap",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.MousePosition#getProjection",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#setCoordinateFormat",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#setMap",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#setProjection",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate",
      "extends": [
        "ol.control.Control"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/rotatecontrol.js",
      "provides": [
        "ol.control.Rotate"
      ]
    },
    {
      "name": "ol.control.Rotate#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#getMap",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Rotate#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#setMap",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Rotate#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine",
      "extends": [
        "ol.control.Control"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/scalelinecontrol.js",
      "provides": [
        "ol.control.ScaleLine",
        "ol.control.ScaleLineProperty",
        "ol.control.ScaleLineUnits"
      ]
    },
    {
      "name": "ol.control.ScaleLine#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getMap",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getUnits",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/scalelinecontrol.js",
      "provides": [
        "ol.control.ScaleLine",
        "ol.control.ScaleLineProperty",
        "ol.control.ScaleLineUnits"
      ]
    },
    {
      "name": "ol.control.ScaleLine#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setMap",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setUnits",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/scalelinecontrol.js",
      "provides": [
        "ol.control.ScaleLine",
        "ol.control.ScaleLineProperty",
        "ol.control.ScaleLineUnits"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom",
      "extends": [
        "ol.control.Control"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/zoomcontrol.js",
      "provides": [
        "ol.control.Zoom"
      ]
    },
    {
      "name": "ol.control.Zoom#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#getMap",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Zoom#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#setMap",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Zoom#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider",
      "extends": [
        "ol.control.Control"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/zoomslidercontrol.js",
      "provides": [
        "ol.control.ZoomSlider"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getMap",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent",
      "extends": [
        "ol.control.Control"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/zoomtoextentcontrol.js",
      "provides": [
        "ol.control.ZoomToExtent"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getMap",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#setMap",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.defaults",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/controldefaults.js",
      "provides": [
        "ol.control"
      ]
    },
    {
      "name": "ol.coordinate.add",
      "description": "Add `delta` to `coordinate`. `coordinate` is modified in place and returned\nby the function.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.createStringXY",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.format",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.fromProjectedArray",
      "description": "Create an ol.Coordinate from an Array and take into account axis order.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.rotate",
      "description": "Rotate `coordinate` by `angle`. `coordinate` is modified in place and\nreturned by the function.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.toStringHDMS",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.toStringXY",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.dom.Input",
      "extends": [
        "ol.Object"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/dom/input.js",
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#getChecked",
      "description": "If the input is a checkbox, return whether or not the checkbox is checked.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/dom/input.js",
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#getValue",
      "description": "Get the value of the input.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/dom/input.js",
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#setChecked",
      "description": "Set whether or not a checkbox is checked.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/dom/input.js",
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#setValue",
      "description": "Sets the value of the input.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/dom/input.js",
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.easing.easeIn",
      "path": "/home/nd0ut/workspace/ol3/src/ol/easing.js",
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.easeOut",
      "path": "/home/nd0ut/workspace/ol3/src/ol/easing.js",
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.inAndOut",
      "path": "/home/nd0ut/workspace/ol3/src/ol/easing.js",
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.linear",
      "path": "/home/nd0ut/workspace/ol3/src/ol/easing.js",
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.upAndDown",
      "path": "/home/nd0ut/workspace/ol3/src/ol/easing.js",
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.events.condition.altKeyOnly",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.altShiftKeysOnly",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.always",
      "description": "Always true.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.mouseOnly",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.never",
      "description": "Always false.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.noModifierKeys",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.platformModifierKeyOnly",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.shiftKeyOnly",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.singleClick",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.targetNotEditable",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.extent.applyTransform",
      "description": "Apply a transform function to the extent.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.boundingExtent",
      "description": "Builds an extent that includes all given coordinates.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.buffer",
      "description": "Return extent increased by the provided value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.containsCoordinate",
      "description": "Checks if the passed coordinate is contained or on the edge of the extent.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.containsExtent",
      "description": "Checks if `extent2` is contained by or on the edge of `extent1`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.createEmpty",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.equals",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.extend",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getBottomLeft",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getBottomRight",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getCenter",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getHeight",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getSize",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getTopLeft",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getTopRight",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getWidth",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.intersects",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.isEmpty",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.format.GML",
      "extends": [
        "ol.format.XMLFeature"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gmlformat.js",
      "provides": [
        "ol.format.GML"
      ]
    },
    {
      "name": "ol.format.GML#readFeatures",
      "description": "Read all features from a GML FeatureCollection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gmlformat.js",
      "provides": [
        "ol.format.GML"
      ]
    },
    {
      "name": "ol.format.GML#writeFeatures",
      "description": "Encode an array of features in GML 3.1.1 Simple Features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gmlformat.js",
      "provides": [
        "ol.format.GML"
      ]
    },
    {
      "name": "ol.format.GPX",
      "extends": [
        "ol.format.XMLFeature"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX#readFeature",
      "description": "Read the first feature from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX#readFeatures",
      "description": "Read all features from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX#readProjection",
      "description": "Read the projection from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX#writeFeatures",
      "description": "Encode an array of features in the GPX format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX.V1_1#readFeature",
      "description": "Read the first feature from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX.V1_1#readFeatures",
      "description": "Read all features from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX.V1_1#readProjection",
      "description": "Read the projection from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX.V1_1#writeFeatures",
      "description": "Encode an array of features in the GPX format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GeoJSON",
      "extends": [
        "ol.format.JSONFeature"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readFeature",
      "description": "Read a feature from a GeoJSON Feature source.  This method will throw\nan error if used with a FeatureCollection source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readFeatures",
      "description": "Read all features from a GeoJSON source.  Works with both Feature and\nFeatureCollection sources.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readGeometry",
      "description": "Read a geometry from a GeoJSON source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readProjection",
      "description": "Read the projection from the GeoJSON source file.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeature",
      "description": "Encode a feature as a GeoJSON Feature object.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeatures",
      "description": "Encode an array of features as GeoJSON.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.IGC",
      "extends": [
        "ol.format.TextFeature"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/igcformat.js",
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.IGC#readFeature",
      "description": "Read the feature from the IGC source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/igcformat.js",
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.IGC#readFeatures",
      "description": "Read the feature from the source. As IGC sources contain a single\nfeature, this will return the feature in an array.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/igcformat.js",
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.IGC#readProjection",
      "description": "Read the projection from the IGC source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/igcformat.js",
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.KML",
      "extends": [
        "ol.format.XMLFeature"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/kmlformat.js",
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readFeature",
      "description": "Read the first feature from a KML source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/kmlformat.js",
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readFeatures",
      "description": "Read all features from a KML source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/kmlformat.js",
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readName",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/kmlformat.js",
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readProjection",
      "description": "Read the projection from a KML source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/kmlformat.js",
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.OSMXML",
      "extends": [
        "ol.format.XMLFeature"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/osmxmlformat.js",
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.OSMXML#readFeatures",
      "description": "Read all features from an OSM source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/osmxmlformat.js",
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.OSMXML#readProjection",
      "description": "Read the projection from an OSM source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/osmxmlformat.js",
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.Polyline",
      "extends": [
        "ol.format.TextFeature"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readFeature",
      "description": "Read the feature from the Polyline source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readFeatures",
      "description": "Read the feature from the source. As Polyline sources contain a single\nfeature, this will return the feature in an array.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readGeometry",
      "description": "Read the geometry from the source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readProjection",
      "description": "Read the projection from a Polyline source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#writeGeometry",
      "description": "Write a single geometry in Polyline format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.decodeDeltas",
      "description": "Decode a list of n-dimensional points from an encoded string",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.decodeFloats",
      "description": "Decode a list of floating point numbers from an encoded string",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.encodeDeltas",
      "description": "Encode a list of n-dimensional points and return an encoded string\n\nAttention: This function will modify the passed array!",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.encodeFloats",
      "description": "Encode a list of floating point numbers and return an encoded string\n\nAttention: This function will modify the passed array!",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.TopoJSON",
      "extends": [
        "ol.format.JSONFeature"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/topojsonformat.js",
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.TopoJSON#readFeatures",
      "description": "Read all features from a TopoJSON source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/topojsonformat.js",
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.TopoJSON#readProjection",
      "description": "Read the projection from a TopoJSON source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/topojsonformat.js",
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.WFS",
      "extends": [
        "ol.format.XMLFeature"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readFeatureCollectionMetadata",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readFeatures",
      "description": "Read all features from a WFS FeatureCollection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readProjection",
      "description": "Read the projection from a WFS source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readTransactionResponse",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#writeGetFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#writeTransaction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WMSCapabilities",
      "extends": [
        "ol.format.XML"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wmscapabilitiesformat.js",
      "provides": [
        "ol.format.WMSCapabilities"
      ]
    },
    {
      "name": "ol.format.WMSCapabilities#read",
      "description": "Read a WMS capabilities document.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wmscapabilitiesformat.js",
      "provides": [
        "ol.format.WMSCapabilities"
      ]
    },
    {
      "name": "ol.geom.Circle",
      "extends": [
        "ol.geom.SimpleGeometry"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#clone",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#getCenter",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getClosestPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Circle#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getFirstCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getLastCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getLayout",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getRadius",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#getSimplifiedGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getType",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#setCenter",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#setCenterAndRadius",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#setRadius",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#transform",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Circle#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry",
      "extends": [
        "ol.Observable"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#applyTransform",
      "description": "Apply a transform function to the geometry.  Modifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#getClosestPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#getExtent",
      "description": "Get the extent of the geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#transform",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection",
      "extends": [
        "ol.geom.Geometry"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#clone",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getClosestPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getGeometries",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getSimplifiedGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getType",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#setGeometries",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#transform",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString",
      "extends": [
        "ol.geom.SimpleGeometry"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#appendCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#clone",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#getClosestPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LineString#getCoordinateAtM",
      "description": "Returns the coordinate at `m` using linear interpolation, or `null` if no\nsuch coordinate exists.\n\n`opt_extrapolate` controls extrapolation beyond the range of Ms in the\nMultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\nM will return the first coordinate and Ms greater than the last M will\nreturn the last coordinate.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getFirstCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getLastCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getLayout",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getLength",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#getSimplifiedGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getType",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#setCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#transform",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LineString#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing",
      "extends": [
        "ol.geom.SimpleGeometry"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#clone",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getArea",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getClosestPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getFirstCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getLastCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getLayout",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getSimplifiedGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getType",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#setCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#transform",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LinearRing#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString",
      "extends": [
        "ol.geom.SimpleGeometry"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#appendLineString",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#clone",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getClosestPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getCoordinateAtM",
      "description": "Returns the coordinate at `m` using linear interpolation, or `null` if no\nsuch coordinate exists.\n\n`opt_extrapolate` controls extrapolation beyond the range of Ms in the\nMultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\nM will return the first coordinate and Ms greater than the last M will\nreturn the last coordinate.\n\n`opt_interpolate` controls interpolation between consecutive LineStrings\nwithin the MultiLineString. If `opt_interpolate` is `true` the coordinates\nwill be linearly interpolated between the last coordinate of one LineString\nand the first coordinate of the next LineString.  If `opt_interpolate` is\n`false` then the function will return `null` for Ms falling between\nLineStrings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getFirstCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLastCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLayout",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLineString",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLineStrings",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getSimplifiedGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getType",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#setCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#transform",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint",
      "extends": [
        "ol.geom.SimpleGeometry"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#appendPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#clone",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getClosestPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getFirstCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getLastCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getLayout",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getPoints",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getSimplifiedGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getType",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#setCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#transform",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon",
      "extends": [
        "ol.geom.SimpleGeometry"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#appendPolygon",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#clone",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getArea",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getClosestPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getFirstCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getInteriorPoints",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getLastCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getLayout",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getPolygon",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getPolygons",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getSimplifiedGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getType",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#setCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#transform",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point",
      "extends": [
        "ol.geom.SimpleGeometry"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#clone",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#getClosestPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Point#getCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#getFirstCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getLastCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getLayout",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#getSimplifiedGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getType",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#setCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#transform",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Point#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon",
      "extends": [
        "ol.geom.SimpleGeometry"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#appendLinearRing",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#clone",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#getArea",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getClosestPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Polygon#getCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getFirstCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getInteriorPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLastCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLayout",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLinearRing",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLinearRings",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#getSimplifiedGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getType",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#setCoordinates",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#transform",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Polygon#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon.circular",
      "description": "Create an approximation of a circle on the surface of a sphere.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry",
      "extends": [
        "ol.geom.Geometry"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getClosestPoint",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getFirstCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getLastCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getLayout",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getSimplifiedGeometry",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#transform",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.inherits",
      "description": "ol.inherits is an alias to the goog.inherits function. It is exported\nfor use in non-compiled application code.\n\nFIXME: We use a new line to fake the linter. Without the new line the\nlinter complains with:\n\n\"Missing newline between constructor and goog.inherits\"",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "provides": [
        "ol"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom",
      "extends": [
        "ol.interaction.Interaction"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/doubleclickzoominteraction.js",
      "provides": [
        "ol.interaction.DoubleClickZoom"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop",
      "extends": [
        "ol.interaction.Interaction"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/draganddropinteraction.js",
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDropEvent#features",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/draganddropinteraction.js",
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.interaction.DragAndDropEvent#file",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/draganddropinteraction.js",
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.interaction.DragAndDropEvent#projection",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/draganddropinteraction.js",
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.interaction.DragBox",
      "extends": [
        "ol.interaction.Pointer"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragboxinteraction.js",
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragBox#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getGeometry",
      "description": "Returns geometry of last drawn box.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragboxinteraction.js",
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan",
      "extends": [
        "ol.interaction.Pointer"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragpaninteraction.js",
      "provides": [
        "ol.interaction.DragPan"
      ]
    },
    {
      "name": "ol.interaction.DragPan#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate",
      "extends": [
        "ol.interaction.Pointer"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragrotateinteraction.js",
      "provides": [
        "ol.interaction.DragRotate"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom",
      "extends": [
        "ol.interaction.Pointer"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragrotateandzoominteraction.js",
      "provides": [
        "ol.interaction.DragRotateAndZoom"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom",
      "extends": [
        "ol.interaction.DragBox"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragzoominteraction.js",
      "provides": [
        "ol.interaction.DragZoom"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getGeometry",
      "description": "Returns geometry of last drawn box.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragboxinteraction.js",
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw",
      "extends": [
        "ol.interaction.Pointer"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/drawinteraction.js",
      "provides": [
        "ol.DrawEvent",
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan",
      "extends": [
        "ol.interaction.Interaction"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/keyboardpaninteraction.js",
      "provides": [
        "ol.interaction.KeyboardPan"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom",
      "extends": [
        "ol.interaction.Interaction"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/keyboardzoominteraction.js",
      "provides": [
        "ol.interaction.KeyboardZoom"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify",
      "extends": [
        "ol.interaction.Pointer"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/modifyinteraction.js",
      "provides": [
        "ol.interaction.Modify"
      ]
    },
    {
      "name": "ol.interaction.Modify#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom",
      "extends": [
        "ol.interaction.Interaction"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/mousewheelzoominteraction.js",
      "provides": [
        "ol.interaction.MouseWheelZoom"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate",
      "extends": [
        "ol.interaction.Pointer"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/pinchrotateinteraction.js",
      "provides": [
        "ol.interaction.PinchRotate"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom",
      "extends": [
        "ol.interaction.Pointer"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/pinchzoominteraction.js",
      "provides": [
        "ol.interaction.PinchZoom"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select",
      "extends": [
        "ol.interaction.Interaction"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/selectinteraction.js",
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/selectinteraction.js",
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#setMap",
      "description": "Remove the interaction from its current map, if any,  and attach it to a new\nmap, if any. Pass `null` to just remove the interaction from the current map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/selectinteraction.js",
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.defaults",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/interactiondefaults.js",
      "provides": [
        "ol.interaction"
      ]
    },
    {
      "name": "ol.layer.Base#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#getBrightness",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getContrast",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getHue",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#getMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#getSaturation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#setBrightness",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setContrast",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setHue",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setSaturation",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#setVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group",
      "extends": [
        "ol.layer.Base"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layergroup.js",
      "provides": [
        "ol.layer.Group"
      ]
    },
    {
      "name": "ol.layer.Group#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#getBrightness",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getContrast",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getHue",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#getMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#getSaturation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#setBrightness",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setContrast",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setHue",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setSaturation",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#setVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap",
      "extends": [
        "ol.layer.Vector"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/heatmaplayer.js",
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Heatmap#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getBrightness",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getContrast",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getHue",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getSaturation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getSource",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getStyle",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getStyleFunction",
      "description": "Get the style function.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setBrightness",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setContrast",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setHue",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setSaturation",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setStyle",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image",
      "extends": [
        "ol.layer.Layer"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/imagelayer.js",
      "provides": [
        "ol.layer.Image"
      ]
    },
    {
      "name": "ol.layer.Image#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#getBrightness",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getContrast",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getHue",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#getMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#getSaturation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getSource",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Image#getVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#setBrightness",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setContrast",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setHue",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setSaturation",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#setVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer",
      "extends": [
        "ol.layer.Base"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Layer#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#getBrightness",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getContrast",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getHue",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#getMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#getSaturation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getSource",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Layer#getVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#setBrightness",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setContrast",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setHue",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setSaturation",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#setVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile",
      "extends": [
        "ol.layer.Layer"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/tilelayer.js",
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Tile#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#getBrightness",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getContrast",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getHue",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#getMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#getSaturation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getSource",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Tile#getVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#setBrightness",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setContrast",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setHue",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setSaturation",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#setVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector",
      "extends": [
        "ol.layer.Layer"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#bindTo",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an\nol.ObjectAccessor with a transform method that lets you transform\nvalues on the way from the source to the target and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#get",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#getBrightness",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getContrast",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getHue",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getKeys",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#getMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getProperties",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#getSaturation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getSource",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Vector#getStyle",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#getStyleFunction",
      "description": "Get the style function.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#getVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#notify",
      "description": "Notify all observers of a change on this property. This notifies both\nobjects that are bound to the object's property as well as the object\nthat it is bound to.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#set",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#setBrightness",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setContrast",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setHue",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setMaxResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setMinResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setOpacity",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setSaturation",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setStyle",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#setValues",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#setVisible",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#unbind",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#unbindAll",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.loadingstrategy.all",
      "description": "Strategy function for loading all features with a single request.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/loadingstrategy.js",
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.loadingstrategy.bbox",
      "description": "Strategy function for loading features based on the view's extent and\nresolution.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/loadingstrategy.js",
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.loadingstrategy.createTile",
      "description": "Creates a strategy function for loading features based on a tile grid.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/loadingstrategy.js",
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.proj.CH",
      "description": "Internal base class for Swiss grid projections.",
      "extends": [
        "ol.proj.Projection"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/chprojection.js",
      "provides": [
        "ol.proj.CH",
        "ol.proj.EPSG2056",
        "ol.proj.EPSG21781"
      ]
    },
    {
      "name": "ol.proj.CH#getCode",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.CH#getExtent",
      "description": "Get the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.CH#getUnits",
      "description": "Get the units of this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG2056",
      "description": "The EPSG:2056 projection, also known as LV95 (CH1903+).",
      "extends": [
        "ol.proj.CH"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/chprojection.js",
      "provides": [
        "ol.proj.CH",
        "ol.proj.EPSG2056",
        "ol.proj.EPSG21781"
      ]
    },
    {
      "name": "ol.proj.EPSG2056#getCode",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG2056#getExtent",
      "description": "Get the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG2056#getUnits",
      "description": "Get the units of this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG21781",
      "description": "The EPSG:21781 projection, also known as LV03 (CH1903).",
      "extends": [
        "ol.proj.CH"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/chprojection.js",
      "provides": [
        "ol.proj.CH",
        "ol.proj.EPSG2056",
        "ol.proj.EPSG21781"
      ]
    },
    {
      "name": "ol.proj.EPSG21781#getCode",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG21781#getExtent",
      "description": "Get the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG21781#getUnits",
      "description": "Get the units of this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG3857",
      "extends": [
        "ol.proj.Projection"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/epsg3857projection.js",
      "provides": [
        "ol.proj.EPSG3857"
      ]
    },
    {
      "name": "ol.proj.EPSG3857#getCode",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG3857#getExtent",
      "description": "Get the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG3857#getUnits",
      "description": "Get the units of this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG4326",
      "extends": [
        "ol.proj.Projection"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/epsg4326projection.js",
      "provides": [
        "ol.proj.EPSG4326"
      ]
    },
    {
      "name": "ol.proj.EPSG4326#getCode",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG4326#getExtent",
      "description": "Get the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG4326#getUnits",
      "description": "Get the units of this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.METERS_PER_UNIT[undefined]",
      "description": "Meters per unit lookup table.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#getCode",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#getExtent",
      "description": "Get the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#getUnits",
      "description": "Get the units of this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.addProjection",
      "description": "Add a Projection object to the list of supported projections.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.common.add",
      "description": "FIXME empty description for jsdoc",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/common.js",
      "provides": [
        "ol.proj.common"
      ]
    },
    {
      "name": "ol.proj.configureProj4jsProjection",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.get",
      "description": "Fetches a Projection object for the code specified.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.getTransform",
      "description": "Given the projection-like objects, searches for a transformation\nfunction to convert a coordinates array from the source projection to the\ndestination projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.transform",
      "description": "Transforms a coordinate from source projection to destination projection.\nSee {@link ol.extent.applyTransform} for extent transformation.\nSee the applyTransform method of {@link ol.geom.SimpleGeometry} and its\nsubclasses for geometry transforms.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.render.Event#context",
      "description": "Canvas context. Only available when a Canvas renderer is used, null\notherwise.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/renderevent.js",
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.Event#frameState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/renderevent.js",
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.Event#glContext",
      "description": "WebGL context. Only available when a WebGL renderer is used, null\notherwise.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/renderevent.js",
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.Event#vectorContext",
      "description": "For canvas, this is an instance of {@link ol.render.canvas.Immediate}.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/renderevent.js",
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawAsync",
      "description": "Register a function to be called for rendering at a given zIndex.  The\nfunction will be called asynchronously.  The callback will receive a\nreference to {@link ol.render.canvas.Immediate} context for drawing.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawCircleGeometry",
      "description": "Render a circle geometry into the canvas.  Rendering is immediate and uses\nthe current fill and stroke styles.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawFeature",
      "description": "Render a feature into the canvas.  In order to respect the zIndex of the\nstyle this method draws asynchronously and thus *after* calls to\ndrawXxxxGeometry have been finished, effectively drawing the feature\n*on top* of everything else.  You probably should be using\n{@link ol.FeatureOverlay} instead of calling this method directly.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawLineStringGeometry",
      "description": "Render a LineString into the canvas.  Rendering is immediate and uses\nthe current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawMultiLineStringGeometry",
      "description": "Render a MultiLineString geometry into the canvas.  Rendering is immediate\nand uses the current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawMultiPointGeometry",
      "description": "Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\nuses the current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawMultiPolygonGeometry",
      "description": "Render MultiPolygon geometry into the canvas.  Rendering is immediate and\nuses the current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawPointGeometry",
      "description": "Render a Point geometry into the canvas.  Rendering is immediate and uses\nthe current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawPolygonGeometry",
      "description": "Render a Polygon geometry into the canvas.  Rendering is immediate and uses\nthe current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#setFillStrokeStyle",
      "description": "Set the fill and stroke style for subsequent draw operations.  To clear\neither fill or stroke styles, pass null for the appropriate parameter.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#setImageStyle",
      "description": "Set the image style for subsequent draw operations.  Pass null to remove\nthe image style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#setTextStyle",
      "description": "Set the text style for subsequent draw operations.  Pass null to\nremove the text style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.source.BingMaps",
      "extends": [
        "ol.source.TileImage"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/bingmapssource.js",
      "provides": [
        "ol.source.BingMaps"
      ]
    },
    {
      "name": "ol.source.BingMaps#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#setTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#setTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps.TOS_ATTRIBUTION",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/bingmapssource.js",
      "provides": [
        "ol.source.BingMaps"
      ]
    },
    {
      "name": "ol.source.FormatVector#addFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#addFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#forEachFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#forEachFeatureInExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getClosestFeatureToCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getFeatureById",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getFeaturesAtCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.FormatVector#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#readFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.FormatVector#removeFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX",
      "extends": [
        "ol.source.StaticVector"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/gpxsource.js",
      "provides": [
        "ol.source.GPX"
      ]
    },
    {
      "name": "ol.source.GPX#addFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#addFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#forEachFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#forEachFeatureInExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getClosestFeatureToCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getFeatureById",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getFeaturesAtCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GPX#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#readFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.GPX#removeFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON",
      "extends": [
        "ol.source.StaticVector"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/geojsonsource.js",
      "provides": [
        "ol.source.GeoJSON"
      ]
    },
    {
      "name": "ol.source.GeoJSON#addFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#addFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#forEachFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#forEachFeatureInExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getClosestFeatureToCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getFeatureById",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getFeaturesAtCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GeoJSON#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#readFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.GeoJSON#removeFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC",
      "extends": [
        "ol.source.StaticVector"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/igcsource.js",
      "provides": [
        "ol.source.IGC"
      ]
    },
    {
      "name": "ol.source.IGC#addFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#addFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#forEachFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#forEachFeatureInExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getClosestFeatureToCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getFeatureById",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getFeaturesAtCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.IGC#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#readFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.IGC#removeFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Image#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas",
      "extends": [
        "ol.source.Image"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagecanvassource.js",
      "provides": [
        "ol.source.ImageCanvas"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic",
      "extends": [
        "ol.source.Image"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagestaticsource.js",
      "provides": [
        "ol.source.ImageStatic"
      ]
    },
    {
      "name": "ol.source.ImageStatic#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageStatic#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector",
      "extends": [
        "ol.source.ImageCanvas"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagevectorsource.js",
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageVector#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#getSource",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagevectorsource.js",
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageVector#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageVector#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS",
      "extends": [
        "ol.source.Image"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getGetFeatureInfoUrl",
      "description": "Return the GetFeatureInfo URL for the passed coordinate, resolution, and\nprojection. Return `undefined` if the GetFeatureInfo URL cannot be\nconstructed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getParams",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getUrl",
      "description": "Return the URL used for this WMS source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#setUrl",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#updateParams",
      "description": "Update the user-provided params.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.KML",
      "extends": [
        "ol.source.StaticVector"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/kmlsource.js",
      "provides": [
        "ol.source.KML"
      ]
    },
    {
      "name": "ol.source.KML#addFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#addFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#forEachFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#forEachFeatureInExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getClosestFeatureToCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getFeatureById",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getFeaturesAtCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.KML#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#readFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.KML#removeFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide",
      "extends": [
        "ol.source.Image"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/mapguidesource.js",
      "provides": [
        "ol.source.MapGuide"
      ]
    },
    {
      "name": "ol.source.MapGuide#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.MapGuide#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest",
      "extends": [
        "ol.source.XYZ"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/mapquestsource.js",
      "provides": [
        "ol.source.MapQuest"
      ]
    },
    {
      "name": "ol.source.MapQuest#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.MapQuest#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.MapQuest#getTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.MapQuest#getTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.MapQuest#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#setTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.MapQuest#setUrl",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.MapQuest#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM",
      "extends": [
        "ol.source.XYZ"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/osmsource.js",
      "provides": [
        "ol.source.OSM"
      ]
    },
    {
      "name": "ol.source.OSM#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSM#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.OSM#getTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.OSM#getTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.OSM#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#setTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.OSM#setUrl",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.OSM#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM.DATA_ATTRIBUTION",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/osmsource.js",
      "provides": [
        "ol.source.OSM"
      ]
    },
    {
      "name": "ol.source.OSM.TILE_ATTRIBUTION",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/osmsource.js",
      "provides": [
        "ol.source.OSM"
      ]
    },
    {
      "name": "ol.source.OSMXML",
      "extends": [
        "ol.source.StaticVector"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/osmxmlsource.js",
      "provides": [
        "ol.source.OSMXML"
      ]
    },
    {
      "name": "ol.source.OSMXML#addFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#addFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#forEachFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#forEachFeatureInExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getClosestFeatureToCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getFeatureById",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getFeaturesAtCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSMXML#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#readFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.OSMXML#removeFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector",
      "extends": [
        "ol.source.FormatVector"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/servervectorsource.js",
      "provides": [
        "ol.source.ServerVector"
      ]
    },
    {
      "name": "ol.source.ServerVector#addFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#addFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#forEachFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#forEachFeatureInExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getClosestFeatureToCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getFeatureById",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getFeaturesAtCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ServerVector#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#readFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/servervectorsource.js",
      "provides": [
        "ol.source.ServerVector"
      ]
    },
    {
      "name": "ol.source.ServerVector#removeFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Source#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen",
      "extends": [
        "ol.source.XYZ"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/stamensource.js",
      "provides": [
        "ol.source.Stamen"
      ]
    },
    {
      "name": "ol.source.Stamen#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Stamen#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#setTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Stamen#setUrl",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.Stamen#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector",
      "extends": [
        "ol.source.FormatVector"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/staticvectorsource.js",
      "provides": [
        "ol.source.StaticVector"
      ]
    },
    {
      "name": "ol.source.StaticVector#addFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#addFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#forEachFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#forEachFeatureInExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getClosestFeatureToCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getFeatureById",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getFeaturesAtCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.StaticVector#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#readFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.StaticVector#removeFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Tile#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.Tile#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug",
      "extends": [
        "ol.source.Tile"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/debugtilesource.js",
      "provides": [
        "ol.source.TileDebug"
      ]
    },
    {
      "name": "ol.source.TileDebug#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileDebug#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileDebug#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage",
      "extends": [
        "ol.source.Tile"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#setTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#setTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON",
      "extends": [
        "ol.source.TileImage"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilejsonsource.js",
      "provides": [
        "ol.source.TileJSON",
        "ol.tilejson"
      ]
    },
    {
      "name": "ol.source.TileJSON#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#setTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#setTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector",
      "extends": [
        "ol.source.FormatVector"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilevectorsource.js",
      "provides": [
        "ol.source.TileVector"
      ]
    },
    {
      "name": "ol.source.TileVector#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#getFeatureById",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TileVector#getFeaturesAtCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TileVector#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileVector#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#readFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.TileVector#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS",
      "extends": [
        "ol.source.TileImage"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#getGetFeatureInfoUrl",
      "description": "Return the GetFeatureInfo URL for the passed coordinate, resolution, and\nprojection. Return `undefined` if the GetFeatureInfo URL cannot be\nconstructed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#getParams",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#getUrls",
      "description": "Return the URLs used for this WMS source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#setTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#setTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#updateParams",
      "description": "Update the user-provided params.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TopoJSON",
      "extends": [
        "ol.source.StaticVector"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/topojsonsource.js",
      "provides": [
        "ol.source.TopoJSON"
      ]
    },
    {
      "name": "ol.source.TopoJSON#addFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#addFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#forEachFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#forEachFeatureInExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getClosestFeatureToCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getFeatureById",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getFeaturesAtCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TopoJSON#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#readFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.TopoJSON#removeFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector",
      "extends": [
        "ol.source.Source"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#addFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#addFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#forEachFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#forEachFeatureInExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getClosestFeatureToCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getExtent",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getFeatureById",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getFeatures",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getFeaturesAtCoordinate",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Vector#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#removeFeature",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.VectorEvent#feature",
      "description": "The feature being added or removed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.WMTS",
      "extends": [
        "ol.source.TileImage"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/wmtssource.js",
      "provides": [
        "ol.source.WMTS",
        "ol.source.WMTSRequestEncoding"
      ]
    },
    {
      "name": "ol.source.WMTS#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#getDimensions",
      "description": "Get the dimensions, i.e. those passed to the constructor through the\n\"dimensions\" option, and possibly updated using the updateDimensions\nmethod.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/wmtssource.js",
      "provides": [
        "ol.source.WMTS",
        "ol.source.WMTSRequestEncoding"
      ]
    },
    {
      "name": "ol.source.WMTS#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#setTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#setTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#updateDimensions",
      "description": "Update the dimensions.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/wmtssource.js",
      "provides": [
        "ol.source.WMTS",
        "ol.source.WMTSRequestEncoding"
      ]
    },
    {
      "name": "ol.source.WMTS.optionsFromCapabilities",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/wmtssource.js",
      "provides": [
        "ol.source.WMTS",
        "ol.source.WMTSRequestEncoding"
      ]
    },
    {
      "name": "ol.source.XYZ",
      "extends": [
        "ol.source.TileImage"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.XYZ#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.XYZ#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#setTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.XYZ#setUrl",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.XYZ#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify",
      "extends": [
        "ol.source.TileImage"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/zoomifysource.js",
      "provides": [
        "ol.source.Zoomify"
      ]
    },
    {
      "name": "ol.source.Zoomify#dispatchChangeEvent",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#getRevision",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#getState",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#on",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#once",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#setTileLoadFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#setTileUrlFunction",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#un",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#unByKey",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.sphere.WGS84",
      "description": "A sphere with radius equal to the semi-major axis of the WGS84 ellipsoid.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/sphere/wgs84sphere.js",
      "provides": [
        "ol.sphere.WGS84"
      ]
    },
    {
      "name": "ol.style.Circle",
      "extends": [
        "ol.style.Image"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getAnchor",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getFill",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getImage",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getOrigin",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getRadius",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getRotation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Circle#getScale",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Circle#getSize",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getStroke",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Fill",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/fillstyle.js",
      "provides": [
        "ol.style.Fill"
      ]
    },
    {
      "name": "ol.style.Fill#getColor",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/fillstyle.js",
      "provides": [
        "ol.style.Fill"
      ]
    },
    {
      "name": "ol.style.Icon",
      "extends": [
        "ol.style.Image"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getAnchor",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getImage",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getOrigin",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getRotation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Icon#getScale",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Icon#getSize",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getSrc",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Image#getRotation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Image#getScale",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Stroke",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getColor",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineCap",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineDash",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineJoin",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getMiterLimit",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getWidth",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Style",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getFill",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getImage",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getStroke",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getText",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getZIndex",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Text",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getFill",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getFont",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getRotation",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getScale",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getStroke",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getText",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getTextAlign",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getTextBaseline",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getMinZoom",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getOrigin",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getResolutions",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getTileSize",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS",
      "extends": [
        "ol.tilegrid.TileGrid"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/wmtstilegrid.js",
      "provides": [
        "ol.tilegrid.WMTS"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getMatrixIds",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/wmtstilegrid.js",
      "provides": [
        "ol.tilegrid.WMTS"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getMinZoom",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getOrigin",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getResolutions",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getTileSize",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ",
      "extends": [
        "ol.tilegrid.TileGrid"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/xyztilegrid.js",
      "provides": [
        "ol.tilegrid.XYZ"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getMinZoom",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getOrigin",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getResolutions",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getTileSize",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify",
      "extends": [
        "ol.tilegrid.TileGrid"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/zoomifytilegrid.js",
      "provides": [
        "ol.tilegrid.Zoomify"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getMinZoom",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getOrigin",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getResolution",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getResolutions",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getTileSize",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.webgl.Context",
      "extends": [
        "goog.events.EventTarget"
      ],
      "path": "/home/nd0ut/workspace/ol3/src/ol/webgl/context.js",
      "provides": [
        "ol.webgl.Context"
      ]
    },
    {
      "name": "ol.webgl.Context#getGL",
      "path": "/home/nd0ut/workspace/ol3/src/ol/webgl/context.js",
      "provides": [
        "ol.webgl.Context"
      ]
    },
    {
      "name": "ol.webgl.Context#useProgram",
      "path": "/home/nd0ut/workspace/ol3/src/ol/webgl/context.js",
      "provides": [
        "ol.webgl.Context"
      ]
    }
  ],
  "defines": [
    {
      "name": "ol.ASSUME_TOUCH",
      "description": "Assume touch.  Default is `false`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": false
    },
    {
      "name": "ol.ENABLE_CANVAS",
      "description": "Enable the Canvas renderer.  Default is `true`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_DOM",
      "description": "Enable the DOM renderer (used as a fallback where Canvas is\n    not available).  Default is `true`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_IMAGE",
      "description": "Enable rendering of ol.layer.Image based layers.  Default\n    is `true`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_NAMED_COLORS",
      "description": "Enable named colors.  Enabling named colors adds about 3KB\n    uncompressed / 1.5KB compressed to the final build size.  Default is\n    `false`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": false
    },
    {
      "name": "ol.ENABLE_PROJ4JS",
      "description": "Enable integration with the Proj4js library.  Default is\n    `true`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_TILE",
      "description": "Enable rendering of ol.layer.Tile based layers.  Default is\n    `true`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_VECTOR",
      "description": "Enable rendering of ol.layer.Vector based layers.  Default\n    is `true`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_WEBGL",
      "description": "Enable the WebGL renderer.  Default is `true`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.LEGACY_IE_SUPPORT",
      "description": "Support legacy IE (7-8).  Default is `false`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": false
    }
  ]
}